'''
시작 : 10:09
종료 : 10:24

0. 문제이해
제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동
처음 출발할 때 자동차에는 기름이 없어서 주유소에서 기름을 넣고 출발
기름통의 크기는 무제한
km마다 1리터의 기름을 사용
. 각 도시에는 단 하나의 주유소, 도시 마다 주유소의 리터당 가격은 다를 수 있다
제일 오른쪽 도시로 이동하는 최소의 비용을 계산하는 프로그램을 작성

- 입력
. 첫 번째 줄에는 도시의 개수를 나타내는 정수 N(2 ≤ N ≤ 100,000)
.  다음 줄에는 인접한 두 도시를 연결하는 도로의 길이가 제일 왼쪽 도로부터 N-1개
. 다음 줄에는 주유소의 리터당 가격이 제일 왼쪽 도시부터 순서대로 N개

제일 왼쪽 도시부터 제일 오른쪽 도시까지의 거리는 1이상 1,000,000,000 이하의 자연수
리터당 가격은 1 이상 1,000,000,000 이하의 자연수

- 출력
제일 왼쪽 도시에서 제일 오른쪽 도시로 가는 최소 비용을 출력

1. 아이디어
단위가 커서 시간복잡도를 잘 고려해야해.

- 그리디 느낌으로, 지나갈 도시중 가장 최소의 가격으로 다음 최소 가격 도시를 갈 때까지

minp 를 정해
    도시를 갈 때마다 minp 를 리뉴얼
도시를 도착하면 minp * 거리 를 총 합에 더해

도시 수만큼 연산하면 되므로 시간복잡도 e5
'''

import sys

input = sys.stdin.readline

N = int(input())
dist = list(map(int,input().split()))
city = list(map(int,input().split()))

total = 0
minp = 1000000000
for i,(d,p) in enumerate(zip(dist,city[:-1])):
    minp = min(minp,p)
    total += minp * d
print(total)

